//
//  HistoryViewController.swift
//  ConcurrencyOneMinute
//
//  Created by Papon Supamongkonchai on 20/4/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryDisplayLogic: AnyObject
{
    func displayGetHistoryCoinAssets(viewModel: History.PriceAsset.ViewModel)
}

class HistoryViewController: UIViewController, HistoryDisplayLogic
{
    //MARK: Property View
    @IBOutlet weak var assetHistoryPriceTableView: UITableView!
    
    //MARK: Property Control & Data
    var interactor: HistoryBusinessLogic?
    var router: (NSObjectProtocol & HistoryRoutingLogic & HistoryDataPassing)?
    var assetPrices: [PriceDisplayModel] = []
    
    //MARK: setup
    override func awakeFromNib() {
        super.awakeFromNib()
        let config = HistoryConfigurator()
        config.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setupView()
        getHistoryCoinAssets()
    }
    
    //MARK: View
    private func setupView() {
        assetHistoryPriceTableView.delegate = self
        assetHistoryPriceTableView.dataSource = self
    }
    
    // MARK: Function
    func getHistoryCoinAssets() {
        interactor?.getHistoryCoinAssets()
    }
    
    // MARK: HistoryDisplayLogic
    func displayGetHistoryCoinAssets(viewModel: History.PriceAsset.ViewModel) {
        self.assetPrices = viewModel.pricesDisplayModel
        self.assetHistoryPriceTableView.reloadData()
    }
}

extension HistoryViewController : UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return assetPrices.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryPriceTableViewCell", for: indexPath) as! HistoryPriceTableViewCell
        cell.configure(
            assetTitle: self.assetPrices[indexPath.row].nameCoin.uppercased(),
            assetPrice: self.assetPrices[indexPath.row].priceCoin,
            timeUpdated: self.assetPrices[indexPath.row].time)
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return CGFloat(60)
    }
}
